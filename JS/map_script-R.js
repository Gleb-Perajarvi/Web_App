// Создаем карту Leaflet и добавляем ее на страницу
var map = L.map("map").setView([63.573764859473904, 88.53365555729758], 3); // Устанавливаем центр карты и начальный масштаб

// Добавляем слой OpenStreetMap
L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
  maxZoom: 18,
  minZoom: 3,
  continuesWorld: false,
}).addTo(map);

// Ограничиваем перемещение карты, чтобы она не заходила за пределы страны
var bounds = [
  [41.306819, 19], // Юго-западная точка
  [81.4, 191], // Северо-восточная точка
]; // Примерные границы России
map.setMaxBounds(bounds);
map.on("drag", function () {
  map.panInsideBounds(bounds, { animate: false });
});

var regions = [
  { name: "Республика Адыгея", coords: [44.46707311834845, 40.14718039865586] },
  { name: "Республика Башкортостан; а также 102 и 702 регионы", coords: [54.83500894531994, 55.37797534212426] },
  { name: "Республика Бурятия", coords: [53.37459736619754, 111.17723314667457]},
  { name: "Республика Алтай", coords: [50.96770278040182, 87.00817813922643]},
  { name: "Республика Дагестан", coords: [42.53344661461572, 47.03392231590358]},
  { name: "Республика Ингушетия", coords: [43.421227456784486, 44.79170568144211]},
  { name: "Кабардино-Балкарская Республика", coords: [43.541887134799204, 43.11956177012511]},
  { name: "Республика Калмыкия", coords: [46.58167902826541, 45.429152800372464]},
  { name: "Карачаево-Черкесская Республика", coords: [43.72242480049169, 41.659900336693894]},
  { name: "Республика Карелия", coords: [62.550577691222614, 32.30919802389291]}, // 10
  { name: "Республика Коми", coords: [63.655104690271365, 54.06541343308381]},
  { name: "Республика Марий Эл", coords: [56.550479325167274, 48.065458353435496]},
  { name: "Республика Республика Мордовия; также 113 регион", coords: [54.21378412736532, 44.64313402659325]},
  { name: "Республика Саха (Якутия)", coords: [65.01741181407549, 125.06634924799417]},
  { name: "Республика Северная Осетия - Алания", coords: [43.12877367740331, 44.21456154874124]},
  { name: "Республика Татарстан; также 116 и 716 регионы", coords: [55.40170461187395, 51.129385313971504]},
  { name: "Республика Тыва", coords: [51.26021116365054, 93.41369567700647]},
  { name: "Удмуртская Республика (Удмуртия)", coords: [57.279678279448724, 52.794902939174676]},
  { name: "Республика Хакасия", coords: [53.20424610427267, 90.05691678224636]},
  { name: "Чувашская Республика (Чувашия); а также 121 регион", coords: [55.722051300173, 47.03884230650489]}, // 20
  { name: "Алтайский край", coords: [52.97422225560465, 80.80437016872489]},
  { name: "Краснодарский край; а также 93, 123, 193 регионы", coords: [45.51105006708828, 38.811500747455]},
  { name: "Красноярский край; а также 124 регион. Раньше 84,88", coords: [64.3732419730276, 95.48629218690299]},
  { name: "Приморский край; а также 125 регион", coords: [45.225236014818876, 135.543205145267]},
  { name: "Ставропольский край; а также 126 регион", coords: [45.29863742650715, 42.651072454756765]},
  { name: "Хабаровский край", coords: [50.92911698814293, 138.03982478121722]},
  { name: "Амурская область", coords: [52.813901734675966, 128.81229102802817]},
  { name: "Архангельская область", coords: [63.384854276324695, 41.67953435082132]},
  { name: "Астраханская область", coords: [46.91843163283427, 47.69253265740906]},
  { name: "Белгородская область", coords: [50.774294718655774, 37.687329215976845]}, // 30
  { name: "Брянская область", coords: [52.97142671003553, 33.62204127829491]},
  { name: "Владимирская область", coords: [56.006864438689526, 40.66951693418517]},
  { name: "Волгоградская область; а также 134 регион", coords: [49.64428771552086, 44.38032450009995]},
  { name: "Вологодская область", coords: [59.98715280223079, 41.260422325552895]},
  { name: "Воронежская область; а также 136 регион", coords: [50.94994518491167, 40.13080258216538]},
  { name: "Ивановская область", coords: [57.0976843847084, 41.79833648907075]},
  { name: "Иркутская область; а также 138 и ранее 85 регионы", coords: [55.70240809354072, 105.36732123399425]},
  { name: "Калининградская область; а также 91 регион", coords: [54.80180893939049, 21.485273234092407]},
  { name: "Калужская область", coords: [54.41593671258402, 35.38143653611295]},
  { name: "Камчатский край; ранее 82 регион", coords: [57.17808134832537, 160.33581830557492]}, // 40
  { name: "Кемеровская область; а также 142 регион", coords: [54.92384033055644, 87.07236833194374]},
  { name: "Кировская область", coords: [58.699769978217645, 49.53603364204605]},
  { name: "Костромская область", coords: [58.637420839419825, 43.52503120514435]},
  { name: "Курганская область", coords: [55.434456426464315, 64.58973934092884]},
  { name: "Курская область", coords: [51.79981579390735, 36.026497258130426]},
  { name: "Ленинградская область; также 147 регион", coords: [59.9430234552559, 33.91358203782459]},
  { name: "Липецкая область", coords: [52.69759704421843, 39.09508198292753]},
  { name: "Магаданская область", coords: [62.62715478620255, 153.7126557988474]},
  { name: "Московская область; также 90, 150, 190, 750, 790 регионы", coords: [55.14789525845411, 38.89678784403004]},
  { name: "Мурманская область", coords: [68.12572609202407, 33.9863496395031]}, // 50
  { name: "Нижегородская область; также 152 регион", coords: [56.107723287239736, 44.436386177751274]},
  { name: "Новгородская область", coords: [58.354471297543235, 32.3939279690148]},
  { name: "Новосибирская область; также 154 регион", coords: [55.704253753372846, 77.85074688980016]},
  { name: "Омская область", coords: [56.78099552135639, 72.92302847258095]},
  { name: "Оренбургская область; также 156 регион", coords: [52.62663949369486, 53.35057342869936]},
  { name: "Орловская область", coords: [52.82889160284932, 36.39590194884724]},
  { name: "Пензенская область", coords: [53.137598218451046, 44.453085793703096]},
  { name: "Пермский край; также 159 и ранее 81 регионы", coords: [59.872348787422226, 55.74224316354023]},
  { name: "Псковская область", coords: [57.64859055629158, 28.912278253608363]},
  { name: "Ростовская область; также 161, 761 регионы", coords: [47.8454172140496, 40.88147223713571]}, // 60
  { name: "Рязанская область", coords: [54.145004229944725, 40.51149616456817]},
  { name: "Самарская область; также 163, 763 регионы", coords: [53.1695023364825, 50.64995136548578]},
  { name: "Саратовская область; также 164 регион", coords: [51.13381138947526, 46.99174580010043]},
  { name: "Сахалинская область", coords: [50.446041779168276, 143.23336970107871]},
  { name: "Свердловская область; также 96, 196 регионы", coords: [59.78877805345973, 61.71022640503628]},
  { name: "Смоленская область", coords: [55.11695776222673, 33.20129682944946]},
  { name: "Тамбовская область", coords: [52.63229570713484, 41.51079391116439]},
  { name: "Тверская область", coords: [56.996001602474585, 33.80443467222366]},
  { name: "Томская область", coords: [58.908155947865325, 80.10473709125208]},
  { name: "Тульская область", coords: [53.85714440623374, 37.64609085307876]}, // 70
  { name: "Тюменская область", coords: [58.33985782369555, 68.79309766022493]},
  { name: "Ульяновская область; также 173 регион", coords: [53.85925746950559, 47.45542099005831]},
  { name: "Челябинская область; также 174, 774 регионы", coords: [54.63650994024593, 60.795618701691836]},
  { name: "Забайкальский край; ранее 80 регион", coords: [51.66392028570131, 116.15253056696338]},
  { name: "Ярославская область", coords: [57.74831830468557, 39.24502547932169]},
  { name: "Москва - город федерального значения; также 97, 99, 177, 197, 199, 777, 797, 799 регионы", coords: [55.7768153860071, 37.59406902611054]},
  { name: "Санкт-Петербург - город федерального значения; также 98, 178, 198", coords: [59.92642766648781, 30.352755130848887]},
  { name: "Еврейская автономная область", coords: [48.61491285917902, 132.06859962185288]},
  { name: "Республика Крым", coords: [45.84157087304165, 33.97132230905288]},
  { name: "Ненецкий автономный округ", coords: [68.10043005923612, 57.035726747704366]}, // 80
  { name: "Ханты-Мансийский автономный округ - Югра; также 186 регион", coords: [61.99725930272287, 70.97126299076533]},
  { name: "Чукотский автономный округ", coords: [67.18595002860363, 169.4272034550053]},
  { name: "Ямало-Ненецкий автономный округ", coords: [65.73583878562684, 76.27914111118316]},
  { name: "Севастополь - город федерального значения", coords: [44.61166684797656, 33.528184034632595]},
  { name: "Байконур - город федерального значения", coords: [45.62355468085243, 63.3141448292508]},
  { name: "Чеченская Республика (Чечня)", coords: [43.268512803827, 45.73892998970141]} // 86
];

const filePath = "CSS\\Images\\EmptyTemplateLicRusNum.jpg";
const reg = [
  '01', '02', '03', '04', '05', '06', '07', '08', '09', 10, 
  11, 12, 13, 14, 15, 16, 17, 18, 19, 
  21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
  31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
  41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
  51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
  61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
  71, 72, 73, 74, 75, 76, 77, 78, 79, 82,
  83, 86, 87, 89, 92, 94, 95
];

regions.forEach(function (region, index) {
  const divel = document.createElement("div");
  divel.classList.add("canvas-container");

  const canvas = document.createElement("canvas");

  loadImage(filePath, canvas, index); // Передаем index в loadImage

  divel.appendChild(canvas);

  var popupContent = document.createElement("div"); // Создаем новый div элемент
  popupContent.appendChild(divel); // Добавляем divel (с canvas) как дочерний элемент

  var textElement = document.createElement("p"); // Создаем элемент для текста
  textElement.innerHTML = region.name; // Добавляем текст
  textElement.style.fontSize = "12pt";
  textElement.style.color = "#ad8fea";

  textElement.setAttribute("align", "center"); // Устанавливаем атрибут выравнивания
  popupContent.appendChild(textElement); // Добавляем текст как дочерний элемент

  L.marker(region.coords).addTo(map).bindPopup(popupContent);
});

function loadImage(imagePath, canvas, index) {
  const img = new Image();
  img.onload = function () {
    drawImage(img, canvas, index); // Передаем index в drawImage
  };
  img.src = imagePath;
}

function drawImage(img, canvas, index) {

  if (!canvas) {
    console.error('Canvas element not found: canvas_' + index);
    return;
  }

  const ctx = canvas.getContext("2d");
  canvas.width = img.width;
  canvas.height = img.height;
  ctx.drawImage(img, 0, 0);

  let let1 = GenerateLetter();
  let num1 = GenarateNum();
  let num2 = GenarateNum();

  let num3 = num1 === 0 && num2 === 0
  ? Math.floor(Math.random() * 9 + 1)
  : Math.floor(Math.random() * 10);

  let let2 = GenerateLetter();
  let let3 = GenerateLetter();
  
  addTextToImage(ctx, let1, "Fonts/RoadNumbers2.0.ttf", 36, "black", 12, 30, 15); // Здесь вызываем функцию добавления текста
  addTextToImage(ctx, num1.toString() + num2.toString() + num3.toString(), "Fonts/RoadNumbers2.0.ttf", 36, "black", 30, 30, 15); // Здесь вызываем функцию добавления текста
  addTextToImage(ctx, let2 + let3, "Fonts/RoadNumbers2.0.ttf", 36, "black", 77.0, 30, 15); // Здесь вызываем функцию добавления текста
  addTextToImage(ctx, reg[index].toString(), "Fonts/RoadNumbers2.0.ttf", 24, "black", 122, 21, 10); // Здесь вызываем функцию добавления текста

  if ((let1 === "B" && let2 === "O" && let3 === "P") || (num1 === num2 && num1 === num3) || (let1 === "A" && let2 === "M" && let3 === "P") || (let1 === "E" && let2 === "K" && let3 === "X") || (num1 === "0" && num2 === "0") || (let1 === let2 && let1 === let3) || (let1 === "B" && num1 === "0" && num2 === "0" && num3 === "4" && let2 === "K" && let3 === "O") || (let1 === "E" && let2 === "P" && let3 === "E" && reg[index] === 77)) {
    console.log(let1 + num1.toString() + num2.toString() + num3.toString() + let2 + let3 + ' reg = ' + reg[index].toString());
  }
}

// Функция для добавления текста на изображение
function addTextToImage(ctx, text, fontFile, fontSize, color, x, y, letterSpacing) {
  const font = new FontFace("customFont", `url(${fontFile})`);
  font
    .load()
    .then((loadedFont) => {
      document.fonts.add(loadedFont);
      ctx.font = `${fontSize}px customFont`;
      ctx.fillStyle = color;
      for (let i = 0; i < text.length; i++) {
        ctx.fillText(text[i], x + i * letterSpacing, y);
      }
    })
    .catch((error) => console.error("Font loading failed:", error));
}

function GenerateLetter() {
  const letters = ["A", "B", "C", "E", "H", "K", "P", "M", "Y", "O", "T", "X"];
  return letters[Math.floor(Math.random() * letters.length)];
}

function GenarateNum() {
  return Math.floor(Math.random() * 10);
}